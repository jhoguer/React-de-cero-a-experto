{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifEcpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifGridItem","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","id","images","downsized_medium","GifGrid","loading","background","state","setState","useEffect","then","imgs","useFetchGifs","console","log","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAAqB,EAGdC,mBAAS,IAHK,mBAG3CC,EAH2C,KAG/BC,EAH+B,KAmBlD,OACE,0BAAMC,SAXa,SAAEC,GACrBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAC9BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,OAOd,2BACEO,KAAK,OACLC,MAAOT,EACPU,SAnBoB,SAAEP,GAC1BF,EAAeE,EAAEQ,OAAOF,YCPfG,EAAc,SAAC,GAAsB,IAAnBC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,IAEpC,OACE,yBAAKC,UAAU,0CACb,yBAAKA,UAAU,gBACb,yBAAKC,IAAMF,EAAMG,IAAMJ,IACvB,2BAAKA,M,uBCNAK,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAEfN,EAFe,iDAEkCO,UAAWF,GAF7C,+DAGFG,MAAOR,GAHL,cAGfS,EAHe,gBAIEA,EAAKC,OAJP,uBAIbC,EAJa,EAIbA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC5B,MAAO,CACLC,GAAID,EAAIC,GACRhB,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIE,cAAN,aAAE,EAAYC,iBAAiBjB,QAVjB,kBAcdY,GAdc,4CAAH,sDCEPM,EAAU,SAAC,GAAkB,IAAhBb,EAAe,EAAfA,SAAe,ECAb,SAAEA,GAAe,IAAD,EAEhBpB,mBAAS,CACjC0B,KAAM,GACNQ,SAAS,EACTC,WAAY,gBAL4B,mBAEnCC,EAFmC,KAE5BC,EAF4B,KAyB1C,OAdAC,qBAAW,WAETnB,EAASC,GACNmB,MAAM,SAAAC,GAELH,EAAS,CACPX,KAAMc,EACNN,SAAS,EACTC,WAAY,qBAGjB,CAACf,IAGGgB,EDvBqCK,CAAcrB,GAA9CW,EAF2B,EAEjCL,KAAcQ,EAFmB,EAEnBA,QAASC,EAFU,EAEVA,WAyB7B,OAxBAO,QAAQC,IAAIT,EAASC,GAmBrBO,QAAQC,IAAIR,GAMZ,yBAAKnB,UAAS,sBAAiBmB,IAC7B,wBAAInB,UAAU,qCAAd,IAAqDI,EAArD,KACEc,GAAW,uBAAGlB,UAAU,oCAAb,cAEX,yBAAKA,UAAU,aAEbe,EAAOH,KAAK,SAAEC,GAAF,OACV,kBAAC,EAAD,eAAae,IAAMf,EAAIC,IAAUD,UED5BgB,EAhCM,WAAM,MAGW7C,mBAAS,CAAC,YAHrB,mBAGlB8C,EAHkB,KAGN/C,EAHM,KAWzB,OACE,oCACE,4CACA,kBAAC,EAAD,CAAaA,cAAgBA,IAC7B,6BAGA,4BAEI+C,EAAWlB,KAAK,SAAAR,GAAQ,OACtB,kBAAC,EAAD,CACEwB,IAAMxB,EACNA,SAAWA,U,MCvBzB2B,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.b046d82c.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ( { setCategories } ) => {\n\n\n  const [inputValue, setinputValue] = useState('');\n\n  const handleInputChange = ( e ) => {\n    setinputValue( e.target.value )\n  }\n\n  const handleSubmit = ( e ) => {\n    e.preventDefault();\n\n    if ( inputValue.trim().length > 2) {\n      setCategories( cats => [ inputValue, ...cats ] )\n      setinputValue('');\n    }\n\n  }\n\n  return (\n    <form onSubmit={ handleSubmit }>\n      <input\n        type=\"text\"\n        value={inputValue}\n        onChange={ handleInputChange }\n      />\n\n    </form>\n  )\n}\n\nAddCategory.propTypes = {\n  setCategories: PropTypes.func.isRequired\n}\n","import React from 'react'\n\nexport const GifGridItem = ( { title, url } ) => {\n\n  return (\n    <div className=\"card animate__animated animate__fadeIn\">\n      <div className=\"card-Content\">\n        <img src={ url } alt={ title } />\n        <p>{ title }</p>\n      </div>\n    </div>\n  )\n}\n","\n\nexport const getGifs = async ( category ) => {\n\n  const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=24&api_key=znwbvNOLnkEPXRn2Ohoq27pL5UVLQ9lf`;\n  const resp = await fetch( url );\n  const { data } = await resp.json();\n\n  const gifs = data.map( img => {\n    return {\n      id: img.id,\n      title: img.title,\n      url: img.images?.downsized_medium.url\n    }\n  })\n\n  return gifs;\n\n}","import React from 'react'\nimport { GifGridItem } from './GifGridItem';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\n\nexport const GifGrid = ({ category }) => {\n\n  let { data: images, loading, background } = useFetchGifs( category );\n  console.log(loading, background)\n\n  // switch ( background ) {\n  //   case 'background1':\n  //     background = 'background2'\n  //     break;\n  //   case 'background2':\n  //     background = 'background3'\n  //     break;\n  //   case 'background3':\n  //     background = 'background1'\n  //     break;\n  //   default:\n  //     background = 'background3'\n\n  // }\n\n\n\n  console.log(background)\n\n\n  \n\n  return (\n  <div className={`contentGrid ${background}`}>\n    <h3 className=\"animate__animated animate__fadeIn\"> { category } </h3>\n    { loading && <p className=\"animate__animated animate__flash\">Loading...</p> } \n    \n      <div className=\"card-grid\">\n      {\n        images.map( ( img ) => (\n          <GifGridItem key={ img.id } { ...img } />\n        ))\n\n      }\n  </div>\n    </div>\n    \n  )\n}\n","import { useState, useEffect } from 'react';\n\nimport { getGifs } from '../helpers/getGifs';\n\nexport const useFetchGifs = ( category ) => {\n\n  const [state, setState] = useState({\n    data: [],\n    loading: true,\n    background: \"background1\"\n  });\n\n  \n\n\n  useEffect( () => {\n\n    getGifs( category )\n      .then( imgs => {\n\n        setState({\n          data: imgs,\n          loading: false,\n          background: 'background3'          \n        });\n      })\n  }, [category])\n\n  \n  return state;\n}","import React, { useState } from 'react';\n\nimport {AddCategory} from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\n\nconst GifExpertApp = () => {\n\n  // const categories = ['One Punh', 'Samurai X', 'Dragon Ball'];\n  const [categories, setCategories] = useState(['Pokemon']);\n\n  // const handleAdd = () => {\n\n  //   // setCategories( [...categories, 'Saylor Moon'] )\n  //   setCategories( cats => [ ...cats, 'Saylor Moon' ] );\n  // }\n\n  return(\n    <>\n      <h2>GifExpertApp</h2>\n      <AddCategory setCategories={ setCategories } />\n      <hr />\n\n      {/* <button onClick={ handleAdd }>Agregar</button> */}\n      <ol>\n        {\n          categories.map( category => (\n            <GifGrid \n              key={ category }\n              category={ category }\n            />\n          ))\n        }\n      </ol>\n    </>\n  )\n}\n\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport GifExpertApp from './GifEcpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}